on: 
  pull_request:
      types: [opened, reopened, synchronize]
      branches: [ "main" ]
  workflow_dispatch:

jobs:
  Checkmarx-Mobb-example:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    name: Fix Checkmarx findings with Mobb
    
    steps:
      - name: Checkout repo to get code
        uses: actions/checkout@v3
      
      - name: Setup Node on this machine
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18
      
      - name: Checkmarx One scan
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: ${{ secrets.BASE_URI }}  # This should be replaced by your base uri for Checkmarx One
          cx_client_id: ${{ secrets.AST_CLIENT_ID }} # This should be created within your Checkmarx One account : https://checkmarx.com/resource/documents/en/34965-118315-authentication-for-checkmarx-one-cli.html#UUID-a4e31a96-1f36-6293-e95a-97b4b9189060_UUID-4123a2ff-32d0-2287-8dd2-3c36947f675e
          cx_client_secret: ${{ secrets.AST_CLIENT_SECRET }} # This should be created within your Checkmarx One account : https://checkmarx.com/resource/documents/en/34965-118315-authentication-for-checkmarx-one-cli.html#UUID-a4e31a96-1f36-6293-e95a-97b4b9189060_UUID-4123a2ff-32d0-2287-8dd2-3c36947f675e
          cx_tenant: ${{ secrets.TENANT }} # This should be replaced by your tenant for Checkmarx One
          additional_params:  --report-format json --output-path . --scan-types sast --threshold sast-high=1 --tags ${{ github.event.pull_request.head.sha }},${{ github.sha }}
    
      
      - name: Run Mobb on the findings and get fixes
        if: always()
        uses: mobb-dev/action@v1
        with:
          report-file: "cx_result.json"
          api-key: ${{ secrets.MOBB_API_TOKEN }}
           github-token: ${{ secrets.GITHUB_TOKEN }}
